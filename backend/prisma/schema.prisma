// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String?
  role          UserRole      @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  projects      Project[]
  invoices      Invoice[]
  expenses      Expense[]
  taxEstimates  TaxEstimate[]
}

model Project {
  id          String       @id @default(uuid())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  invoices    Invoice[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Invoice {
  id          String       @id @default(uuid())
  number      String       @unique
  amount      Float
  status      InvoiceStatus @default(PENDING)
  dueDate     DateTime
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  projectId   String
  project     Project      @relation(fields: [projectId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Expense {
  id          String   @id @default(uuid())
  description String
  amount      Float
  date        DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TaxEstimate {
  id          String   @id @default(uuid())
  year        Int
  quarter     Int
  income      Float
  expenses    Float
  tax         Float
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, year, quarter])
}

model ApiKey {
  id        String   @id @default(uuid())
  key       String   @unique
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime?
  lastUsed  DateTime?
  isActive  Boolean  @default(true)
}

model AnalyticsData {
  id        String   @id @default(uuid())
  timestamp DateTime @default(now())
  type      String
  data      Json
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Migration {
  id        Int      @id @default(autoincrement())
  version   String   @unique
  appliedAt DateTime @default(now())
  status    String
}

enum UserRole {
  ADMIN
  USER
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
}

enum InvoiceStatus {
  PENDING
  SENT
  PAID
  CANCELLED
}
